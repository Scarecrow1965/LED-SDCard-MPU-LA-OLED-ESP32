; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:esp32doit-devkit-v1]
; We highly recommend pinning the platform to a version.
; See Version Requirements for details.
; platformio/espressif32@>=3.5.0,<4,!=3.2.0
platform = espressif32
; platform_packages = framework-arduinoespressif32 @
framework = arduino
board = esp32doit-devkit-v1
board_build.mcu = esp32
; Custom CPU Frequency
board_build.f_cpu = 240000000L
; board_build.ldscript = eagle.flash.4m2m.ld
; board_build.partitions = huge_app.csv
; board_build.flash_mode = dio
; board_build.flash_freq = 40m
; board_build.flash_size = detect
; board_build.boot = nodemcu-32s
; board_build.f_flash = 80000000L
; board_upload.maximum_size = 1310720

; Build options
build_type = debug
build_flags = -Wno-unused-variable -std=c++14
; build_flags = -Wno-unused-variable -std=c++17
; build_src_flags = -std=gnu++11
; build_unflags = -std=gnu++11
; To include or exclude specific source files from the build process, 
; use the build_src_filter option in the “platformio.ini” (Project Configuration File).
; The build_src_filter option can take a list of file patterns in glob syntax.
; Only the source files that match the specified patterns will be included in the build process.
build_src_filter = +<*> -<.git/> -<svn/> -<example/> -<examples/> -<test/> -<tests/>
; targets = upload

; Serial Monitor options
; monitor_port = COM3
monitor_speed = 115200
; monitor_parity = N
; monitor_filters = esp32_exception_decoder
; monitor_rts = 0
; monitor_dtr = 0
; monitor_eol = CRLF
; monitor_raw = true
; monitor_echo = true
; monitor_encoding = default

; Upload Options
; upload_port = COM3
upload_protocol = esptool
; upload_speed = 115200
; upload_flags = --flash_mode dio --flash_freq 40m --flash_size detect
; upload_resetmethod = ck
; upload_command = upload

; Debugging options
; which debugger to use
debug_tool = cmsis-dap
;debug_build_flags = -g3
;debug_init_break = tbreak setup
;debug_init_cmds = target extended-remote $DEBUG_PORT\nmonitor swdp_scan\nattach 1\n
;debug_extra_cmds =
;debug_load_cmds = load\nmonitor reset halt\n
;debug_load_mode = always
;debug_server = $PLATFORMIO_HOME_DIR/packages/tool-openocd-esp32/bin/openocd
;debug_port = 3333
;debug_speed = 1000
;debug_svd_path = $PLATFORMIO_HOME_DIR/packages/tool-openocd-esp32/share/openocd/scripts/target/esp32
;debug_server_ready_pattern = "Listening on port"
;debug_test

; Library Options
; library management
lib_deps = 
	;for the LEDs
	fastled/FastLED
    ;
	; the OLED Library list
	olikraus/U8g2
	adafruit/Adafruit GFX Library
	adafruit/Adafruit SSD1306
	;
	; MPU6050 libraries
	jrowberg/I2Cdevlib-Core
	adafruit/Adafruit MPU6050
	electroniccats/MPU6050
	;
	; Ultrasonic libraries
	ericksimoes/Ultrasonic
	;
    ; for the WebServer
	arduino-libraries/Arduino_JSON
	mathieucarbou/ESPAsyncWebServer
	WiFiClient
	ESPmDNS
	; the libraries for the RT11
	; featherfly/SoftwareSerial
	; plerup/EspSoftwareSerial
	; for the ESPHome
	; esphome=https://github.com/esphome/esphome.git
	; esphome=https://github.com/esphome/esphome/archive/refs/heads/dev.zip

; lib_ignore =
; lib_extra_dirs = ; deprecated
; lib_ldf_mode = chain+
; lib_compat_mode = strict
; lib_archive = true

; Unit Testing options
; test_framework = google
; test_filter = test_*
; test_ignore = test_desktop
; test_port = COM3
; test_speed = 115200
; test_build_src
; test_testing_command = test

; Advanced Options
; extends =
; extra_scripts =

